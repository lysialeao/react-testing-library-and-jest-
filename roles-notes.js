[{"content":"## Welcome to RTLBook\n\nThis is an interactive coding environment where you can explore the following libraries:\n\n| Name      | Docs |\n| ----------- | ----------- |\n| React      | [docs](https://reactjs.org/)       |\n| @testing-library/react   |  [docs](https://testing-library.com/docs/react-testing-library/intro/)        |\n| @testing-library/user-event |   [docs](https://testing-library.com/docs/user-event/intro)  |\n| @testing-library/react-hooks |  [docs](https://github.com/testing-library/react-hooks-testing-library)  |\n| @testing-library/jest-dom | [docs](https://github.com/testing-library/jest-dom#custom-matchers) |\n| expect |  [docs](https://jestjs.io/docs/expect)  |\n\nIn between each 'cell' there are buttons that can add in a new code editor or a text section.","type":"text","id":"12frm"},{"content":"import { render, screen } from '@testing-library/react';\r\n\r\nconst RoleExample = () => {\r\n  return (\r\n    <div> \r\n      <a href=''>link</a>\r\n      <button>button</button>\r\n      <footer>contentinfo</footer>\r\n      <h1>heading</h1>\r\n      <header>banner</header>\r\n      <img alt=\"Description\" /> img \r\n      <input type=\"checkbox\" /> checkbox\r\n      <input type=\"number\" /> spinbutton\r\n      <input type=\"radio\" /> radio \r\n      <input type=\"text\" /> textbox\r\n      <li>listitem</li>\r\n      <ul>listgroup</ul> \r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<RoleExample />)","type":"code","id":"ifel7"},{"content":"test('can find elements by role', () => {\r\n\r\n  render(<RoleExample />)\r\n\r\n  const roles = [\r\n    'link',\r\n    'button',\r\n    'contentinfo',\r\n    'heading',\r\n    'banner',\r\n    'img',\r\n    'checkbox',\r\n    'spinbutton',\r\n    'radio',\r\n    'textbox',\r\n    'listitem',\r\n    'list'\r\n  ]\r\n\r\n  for ( let role of roles ) {\r\n    const element = screen.getByRole(role)\r\n\r\n    expect(element).toBeInTheDocument()\r\n  }\r\n})","type":"code","id":"9lgpx"},{"content":"const AccessibleName = () => {\r\n  return (\r\n    <div> \r\n      <input />\r\n      <button>Submit</button>\r\n      <button>Cancel</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<AccessibleName />)","type":"code","id":"di9lb"},{"content":"test('can select by accesible name', () => {\r\n  render(<AccessibleName />)\r\n\r\n  const submitButton = screen.getByRole('button', {\r\n    name: /submmit/i\r\n  })\r\n\r\n  const cancelButton = screen.getByRole('button', {\r\n    name: /cancel/i\r\n  })\r\n\r\n  expect(submitButton).toBeInTheDocument()\r\n  expect(cancelButton).toBeInTheDocument()\r\n})","type":"code","id":"1ez75"},{"content":"const MoreNames = () => {\r\n  return (\r\n    <div> \r\n      <label htmlFor='email'>Email</label>\r\n      <input id='email'/>\r\n      <label htmlFor='search'>Search</label>\r\n      <input id='search'/>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<MoreNames />)","type":"code","id":"bc4o0"},{"content":"test('shows an email and search input', () => {\r\n  render(<MoreNames />)\r\n\r\n  const emailInput = screen.getByRole('textbox', {\r\n    name: /email/i\r\n  })\r\n\r\n  const searchInput = screen.getByRole('textbox', {\r\n    name: /search/i\r\n  })\r\n\r\n  expect(emailInput).toBeInTheDocument()\r\n  expect(searchInput).toBeInTheDocument()\r\n})","type":"code","id":"l3u5f"},{"content":"const IconButtons = () => {\r\n  return (\r\n    <div> \r\n      <button aria-label='sign in'> \r\n        <svg />\r\n      </button>\r\n      <button aria-label='sign out'> \r\n        <svg />\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<IconButtons />)","type":"code","id":"dgngc"},{"content":"test('find elemenents based on label', () => {\r\n  render(<IconButtons />)\r\n\r\n  const signInButton = screen.getByRole('button', () => {\r\n    name: /sign in/i\r\n  })\r\n\r\n  const signOutButton = screen.getByRole('button', () => {\r\n    name: /sign out/i\r\n  })\r\n\r\n\r\n  expect(signInButton).toBeInTheDocument()\r\n  expect(signOutButton).toBeInTheDocument()\r\n\r\n})","type":"code","id":"z7agv"},{"content":"import React, { useState } from 'react';\nimport { render, screen } from '@testing-library/react';\nimport user from '@testing-library/user-event';\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n  return <button onClick={() => setCount((c) => c + 1)}>\n    Count: {count}\n  </button>\n};\nrender(<Counter />);","type":"code","id":"az9bh"},{"content":"test('it shows a button', () => {\n  render(<Counter />);\n\n  const button = screen.getByRole('button');\n\n  expect(\n    button\n  ).toBeInTheDocument();\n});\n","type":"code","id":"ngyzj"},{"content":"test('it doesnt show an input', () => {\n  render(<Counter />);\n\n  const input = screen.queryByRole('textbox');\n  \n  expect(\n    input\n  ).not.toBeInTheDocument();\n});\n","type":"code","id":"hgs1s"}]